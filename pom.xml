<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.2.RELEASE</version>
	</parent>
	<groupId>com.autentia.tutos</groupId>
	<artifactId>CitiesWS</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<generated.sources.dir>${project.basedir}/target/generated-sources</generated.sources.dir>

		<!-- Jacoco properties -->
		<jacoco.version>0.7.7.201606060606</jacoco.version>
		<jacoco.it.execution.data.path>${project.build.directory}</jacoco.it.execution.data.path>
		<jacoco.it.execution.data.file>${project.basedir}/target/jacoco-it.exec</jacoco.it.execution.data.file>
		<jacoco.ut.execution.data.path>${project.build.directory}</jacoco.ut.execution.data.path>
		<jacoco.ut.execution.data.file>${project.basedir}/target/jacoco.exec</jacoco.ut.execution.data.file>

		<!-- Only unit tests are run by default. -->
		<junit.version>4.12</junit.version>
		<mockito.version>1.10.19</mockito.version>
		<skip.unit.tests>false</skip.unit.tests>
		<skip.integration.tests>true</skip.integration.tests>

		<!-- Persistence -->
		<mybatis.sringboot.version>1.1.1</mybatis.sringboot.version>
		<mysql.connector.version>5.1.40</mysql.connector.version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxb2-maven-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<id>xjc</id>
						<goals>
							<goal>xjc</goal>
						</goals>
						<phase>generate-sources</phase>
					</execution>
				</executions>
				<configuration>
					<schemaDirectory>${project.basedir}/src/main/resources/schemas</schemaDirectory>
					<outputDirectory>${generated.sources.dir}</outputDirectory>
					<clearOutputDir>false</clearOutputDir>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${generated.sources.dir}</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.basedir}/target/generated-sources</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.7.201606060606</version>
				<executions>
					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Surefire plugin is executed. -->
					<execution>
						<id>pre-unit-test</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${jacoco.ut.execution.data.file}</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>surefire.argLine</propertyName>
							<append>true</append>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created 
						after unit tests have been run. -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${jacoco.ut.execution.data.file}</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${jacoco.ut.execution.data.path}</outputDirectory>
						</configuration>
					</execution>
					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Failsafe plugin is executed. -->
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${jacoco.it.execution.data.file}</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>failsafe.argLine</propertyName>
							<append>true</append>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for integration tests after 
						integration tests have been run. -->
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${jacoco.it.execution.data.file}</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${jacoco.it.execution.data.path}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Used for unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>

					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>-Dfile.encoding=${project.build.sourceEncoding}
						${surefire.argLine}</argLine>
					<!-- Skips unit tests if the value of skip.unit.tests property is true -->
					<skipTests>${skip.unit.tests}</skipTests>
					<!-- Excludes integration tests when unit tests are run. -->
					<excludes>
						<exclude>**/*IT.java</exclude>
						<exclude>**/*IntegrationTest.java</exclude>
						<exclude>**/*SoapUITest.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- Used for integration tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<!-- Ensures that both integration-test and verify goals of the Failsafe 
						Maven plugin are executed. -->
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- Sets the VM argument line used when integration tests are run. -->
					<argLine>-Dfile.encoding=${project.build.sourceEncoding}
						${failsafe.argLine}</argLine>

					<!-- Skips integration tests if the value of skip.integration.tests 
						property is true -->
					<skipITs>${skip.integration.tests}</skipITs>
					<includes>
						<include>**/*IT.java</include>
						<include>**/*IntegrationTest.java</include>
					</includes>
					<excludes>
						<exclude>**/*SoapUITest.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<classifier>exec</classifier>
				</configuration>
			</plugin>




			<plugin>
				<groupId>org.eclipse.m2e</groupId>
				<artifactId>lifecycle-mapping</artifactId>
				<version>1.0.0</version>
				<configuration>
					<lifecycleMappingMetadata>
						<pluginExecutions>
							<pluginExecution>
								<pluginExecutionFilter>
									<groupId>org.jacoco</groupId>
									<artifactId>jacoco-maven-plugin</artifactId>
									<versionRange>[0.5,)
									</versionRange>
									<goals>
										<goal>prepare-agent</goal>
									</goals>
								</pluginExecutionFilter>
								<action>
									<!-- m2e doesn't know what to do with jacoco, let's ignore it or 
										annoying error markers appear see http://wiki.eclipse.org/M2E_plugin_execution_not_covered -->
									<ignore />
								</action>
							</pluginExecution>
						</pluginExecutions>
					</lifecycleMappingMetadata>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
			</plugin>

		</plugins>





	</build>

	<dependencies>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<!-- we want to rely on external log4j2 -->
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-ws</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>jaxen</groupId>
			<artifactId>jaxen</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jdom</groupId>
			<artifactId>jdom2</artifactId>
		</dependency>
		<dependency>
			<groupId>wsdl4j</groupId>
			<artifactId>wsdl4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>

		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP-java7</artifactId>
			<version>2.4.9</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>com.smartbear.soapui</groupId>
			<artifactId>soapui</artifactId>
			<version>5.2.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>development</id>
			<properties>
				<environment.profile>development</environment.profile>
				<environment.name>Local environment</environment.name>
				<skip.integration.tests>true</skip.integration.tests>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>integration</id>
			<properties>
				<environment.profile>integration</environment.profile>
				<environment.name>Integration environment</environment.name>
				<skip.integration.tests>false</skip.integration.tests>
			</properties>
		</profile>

		<profile>
			<id>soapui</id>
			<properties>
				<environment.profile>soapui integration</environment.profile>
				<environment.name>Integration environment for soapui</environment.name>
				<skip.integration.tests>false</skip.integration.tests>
				<skip.unit.tests>true</skip.unit.tests>
			</properties>

			<build>
				<plugins>
					<!-- Used for unit tests -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>

							<!-- Sets the VM argument line used when unit tests are run. -->
							<argLine>-Dfile.encoding=${project.build.sourceEncoding}
								${surefire.argLine}</argLine>
							<!-- Skips unit tests if the value of skip.unit.tests property is 
								true -->
							<skipTests>${skip.unit.tests}</skipTests>
							<!-- Excludes integration tests when unit tests are run. -->
							<excludes>
								<exclude>**/*IT.java</exclude>
								<exclude>**/*IntegrationTest.java</exclude>
								<exclude>**/*SoapUITest.java</exclude>
							</excludes>
						</configuration>
					</plugin>
					<!-- Used for integration tests -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<!-- Ensures that both integration-test and verify goals of the Failsafe 
								Maven plugin are executed. -->
							<execution>
								<id>integration-tests</id>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<!-- Sets the VM argument line used when integration tests are run. -->
							<argLine>-Dfile.encoding=${project.build.sourceEncoding}
								${failsafe.argLine}</argLine>

							<!-- Skips integration tests if the value of skip.integration.tests 
								property is true -->
							<skipITs>${skip.integration.tests}</skipITs>
							<includes>
								<include>**/*SoapUITest.java</include>
							</includes>
							<excludes>
								<exclude>**/*IT.java</exclude>
								<exclude>**/*IntegrationTest.java</exclude>
							</excludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>